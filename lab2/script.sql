-- task1

-- DROP TABLE Students;
-- DROP TABLE Groups;

-- CREATE TABLE Students(
--     id NUMBER,
--     name VARCHAR2(15),
--     group_id NUMBER
-- );

-- CREATE TABLE Groups(
--     id NUMBER GENERATED BY DEFAULT AS IDENTITY,
--     name VARCHAR2(15),
--     c_val NUMBER
-- );


-- task2

-- DROP TRIGGER Unique_student_id;

-- CREATE TRIGGER Unique_student_id 
-- BEFORE INSERT OR UPDATE OF id
-- ON Students
-- FOR EACH ROW
-- DECLARE
--     not_unique EXCEPTION;
--     PRAGMA AUTONOMOUS_TRANSACTION;
--     PRAGMA EXCEPTION_INIT(not_unique, -0125673);
--     c NUMBER := 0;
-- BEGIN
--     SELECT COUNT(*) INTO c FROM Students WHERE id = :NEW.id; 
--     IF c > 0 THEN
--         RAISE not_unique;
--     END IF;
-- END;

-- DROP TRIGGER Unique_group_id;

-- CREATE TRIGGER Unique_group_id 
-- BEFORE INSERT OR UPDATE OF id
-- ON Groups
-- FOR EACH ROW
-- DECLARE
--     not_unique EXCEPTION;
--     PRAGMA AUTONOMOUS_TRANSACTION;
--     PRAGMA EXCEPTION_INIT(not_unique, -0123428);
--     c NUMBER := 0;
-- BEGIN
--     SELECT COUNT(*) INTO c FROM Groups WHERE id = :NEW.id; 
--     IF c > 0 THEN
--         RAISE not_unique;
--     END IF;
-- END;

-- DROP TRIGGER Unique_group_name;

-- CREATE TRIGGER Unique_group_name 
-- BEFORE INSERT OR UPDATE OF name
-- ON Groups
-- FOR EACH ROW
-- DECLARE
--     not_unique EXCEPTION;
--     PRAGMA AUTONOMOUS_TRANSACTION;
--     PRAGMA EXCEPTION_INIT(not_unique, -0127389);
--     c NUMBER := 0;
-- BEGIN
--     SELECT COUNT(*) INTO c FROM Groups WHERE name = :NEW.name; 
--     IF c > 0 THEN
--         RAISE not_unique;
--     END IF;
-- END;

-- DROP TRIGGER AutoincrementStudentId;

-- CREATE TRIGGER AutoincrementStudentId
-- BEFORE INSERT 
-- ON Students
-- FOR EACH ROW
-- FOLLOWS Unique_student_id
-- DECLARE
--     PRAGMA AUTONOMOUS_TRANSACTION;
--     newId NUMBER := 0;
-- BEGIN
--     SELECT id INTO newId FROM Students ORDER BY id DESC FETCH FIRST 1 ROWS ONLY;
--     :NEW.id := newId + 1;
-- EXCEPTION WHEN NO_DATA_FOUND THEN
--     :NEW.id := 1;
-- END;

-- DROP TRIGGER AutoincrementGroupId;

-- CREATE TRIGGER AutoincrementGroupId
-- BEFORE INSERT 
-- ON Groups
-- FOR EACH ROW
-- FOLLOWS Unique_group_id
-- DECLARE
--     PRAGMA AUTONOMOUS_TRANSACTION;
--     newId NUMBER := 0;
-- BEGIN
--     SELECT id INTO newId FROM Groups ORDER BY id DESC FETCH FIRST 1 ROWS ONLY;
--     :NEW.id := newId + 1;
-- EXCEPTION WHEN NO_DATA_FOUND THEN
--     :NEW.id := 1;
-- END;

-- task 3